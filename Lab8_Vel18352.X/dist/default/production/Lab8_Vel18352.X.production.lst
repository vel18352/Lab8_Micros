

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Apr 16 20:18:08 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0014                     	;# 
    86     0015                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0017                     	;# 
    90     0018                     	;# 
    91     0019                     	;# 
    92     001A                     	;# 
    93     001B                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001D                     	;# 
    97     001E                     	;# 
    98     001F                     	;# 
    99     0081                     	;# 
   100     0085                     	;# 
   101     0086                     	;# 
   102     0087                     	;# 
   103     0088                     	;# 
   104     0089                     	;# 
   105     008C                     	;# 
   106     008D                     	;# 
   107     008E                     	;# 
   108     008F                     	;# 
   109     0090                     	;# 
   110     0091                     	;# 
   111     0092                     	;# 
   112     0093                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0094                     	;# 
   116     0095                     	;# 
   117     0096                     	;# 
   118     0097                     	;# 
   119     0098                     	;# 
   120     0099                     	;# 
   121     009A                     	;# 
   122     009B                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     0105                     	;# 
   128     0107                     	;# 
   129     0108                     	;# 
   130     0109                     	;# 
   131     010C                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     010F                     	;# 
   136     0185                     	;# 
   137     0187                     	;# 
   138     0188                     	;# 
   139     0189                     	;# 
   140     018C                     	;# 
   141     018D                     	;# 
   142     0000                     	;# 
   143     0001                     	;# 
   144     0002                     	;# 
   145     0003                     	;# 
   146     0004                     	;# 
   147     0005                     	;# 
   148     0006                     	;# 
   149     0007                     	;# 
   150     0008                     	;# 
   151     0009                     	;# 
   152     000A                     	;# 
   153     000B                     	;# 
   154     000C                     	;# 
   155     000D                     	;# 
   156     000E                     	;# 
   157     000E                     	;# 
   158     000F                     	;# 
   159     0010                     	;# 
   160     0011                     	;# 
   161     0012                     	;# 
   162     0013                     	;# 
   163     0014                     	;# 
   164     0015                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0017                     	;# 
   168     0018                     	;# 
   169     0019                     	;# 
   170     001A                     	;# 
   171     001B                     	;# 
   172     001B                     	;# 
   173     001C                     	;# 
   174     001D                     	;# 
   175     001E                     	;# 
   176     001F                     	;# 
   177     0081                     	;# 
   178     0085                     	;# 
   179     0086                     	;# 
   180     0087                     	;# 
   181     0088                     	;# 
   182     0089                     	;# 
   183     008C                     	;# 
   184     008D                     	;# 
   185     008E                     	;# 
   186     008F                     	;# 
   187     0090                     	;# 
   188     0091                     	;# 
   189     0092                     	;# 
   190     0093                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0094                     	;# 
   194     0095                     	;# 
   195     0096                     	;# 
   196     0097                     	;# 
   197     0098                     	;# 
   198     0099                     	;# 
   199     009A                     	;# 
   200     009B                     	;# 
   201     009C                     	;# 
   202     009D                     	;# 
   203     009E                     	;# 
   204     009F                     	;# 
   205     0105                     	;# 
   206     0107                     	;# 
   207     0108                     	;# 
   208     0109                     	;# 
   209     010C                     	;# 
   210     010C                     	;# 
   211     010D                     	;# 
   212     010E                     	;# 
   213     010F                     	;# 
   214     0185                     	;# 
   215     0187                     	;# 
   216     0188                     	;# 
   217     0189                     	;# 
   218     018C                     	;# 
   219     018D                     	;# 
   220     0000                     	;# 
   221     0001                     	;# 
   222     0002                     	;# 
   223     0003                     	;# 
   224     0004                     	;# 
   225     0005                     	;# 
   226     0006                     	;# 
   227     0007                     	;# 
   228     0008                     	;# 
   229     0009                     	;# 
   230     000A                     	;# 
   231     000B                     	;# 
   232     000C                     	;# 
   233     000D                     	;# 
   234     000E                     	;# 
   235     000E                     	;# 
   236     000F                     	;# 
   237     0010                     	;# 
   238     0011                     	;# 
   239     0012                     	;# 
   240     0013                     	;# 
   241     0014                     	;# 
   242     0015                     	;# 
   243     0015                     	;# 
   244     0016                     	;# 
   245     0017                     	;# 
   246     0018                     	;# 
   247     0019                     	;# 
   248     001A                     	;# 
   249     001B                     	;# 
   250     001B                     	;# 
   251     001C                     	;# 
   252     001D                     	;# 
   253     001E                     	;# 
   254     001F                     	;# 
   255     0081                     	;# 
   256     0085                     	;# 
   257     0086                     	;# 
   258     0087                     	;# 
   259     0088                     	;# 
   260     0089                     	;# 
   261     008C                     	;# 
   262     008D                     	;# 
   263     008E                     	;# 
   264     008F                     	;# 
   265     0090                     	;# 
   266     0091                     	;# 
   267     0092                     	;# 
   268     0093                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0094                     	;# 
   272     0095                     	;# 
   273     0096                     	;# 
   274     0097                     	;# 
   275     0098                     	;# 
   276     0099                     	;# 
   277     009A                     	;# 
   278     009B                     	;# 
   279     009C                     	;# 
   280     009D                     	;# 
   281     009E                     	;# 
   282     009F                     	;# 
   283     0105                     	;# 
   284     0107                     	;# 
   285     0108                     	;# 
   286     0109                     	;# 
   287     010C                     	;# 
   288     010C                     	;# 
   289     010D                     	;# 
   290     010E                     	;# 
   291     010F                     	;# 
   292     0185                     	;# 
   293     0187                     	;# 
   294     0188                     	;# 
   295     0189                     	;# 
   296     018C                     	;# 
   297     018D                     	;# 
   298     0000                     	;# 
   299     0001                     	;# 
   300     0002                     	;# 
   301     0003                     	;# 
   302     0004                     	;# 
   303     0005                     	;# 
   304     0006                     	;# 
   305     0007                     	;# 
   306     0008                     	;# 
   307     0009                     	;# 
   308     000A                     	;# 
   309     000B                     	;# 
   310     000C                     	;# 
   311     000D                     	;# 
   312     000E                     	;# 
   313     000E                     	;# 
   314     000F                     	;# 
   315     0010                     	;# 
   316     0011                     	;# 
   317     0012                     	;# 
   318     0013                     	;# 
   319     0014                     	;# 
   320     0015                     	;# 
   321     0015                     	;# 
   322     0016                     	;# 
   323     0017                     	;# 
   324     0018                     	;# 
   325     0019                     	;# 
   326     001A                     	;# 
   327     001B                     	;# 
   328     001B                     	;# 
   329     001C                     	;# 
   330     001D                     	;# 
   331     001E                     	;# 
   332     001F                     	;# 
   333     0081                     	;# 
   334     0085                     	;# 
   335     0086                     	;# 
   336     0087                     	;# 
   337     0088                     	;# 
   338     0089                     	;# 
   339     008C                     	;# 
   340     008D                     	;# 
   341     008E                     	;# 
   342     008F                     	;# 
   343     0090                     	;# 
   344     0091                     	;# 
   345     0092                     	;# 
   346     0093                     	;# 
   347     0093                     	;# 
   348     0093                     	;# 
   349     0094                     	;# 
   350     0095                     	;# 
   351     0096                     	;# 
   352     0097                     	;# 
   353     0098                     	;# 
   354     0099                     	;# 
   355     009A                     	;# 
   356     009B                     	;# 
   357     009C                     	;# 
   358     009D                     	;# 
   359     009E                     	;# 
   360     009F                     	;# 
   361     0105                     	;# 
   362     0107                     	;# 
   363     0108                     	;# 
   364     0109                     	;# 
   365     010C                     	;# 
   366     010C                     	;# 
   367     010D                     	;# 
   368     010E                     	;# 
   369     010F                     	;# 
   370     0185                     	;# 
   371     0187                     	;# 
   372     0188                     	;# 
   373     0189                     	;# 
   374     018C                     	;# 
   375     018D                     	;# 
   376     001F                     _ADCON0	set	31
   377     0018                     _RCSTAbits	set	24
   378     0008                     _PORTD	set	8
   379     0007                     _PORTC	set	7
   380     0005                     _PORTA	set	5
   381     0006                     _PORTB	set	6
   382     001A                     _RCREG	set	26
   383     000C                     _PIR1bits	set	12
   384     001E                     _ADRESH	set	30
   385     0019                     _TXREG	set	25
   386     001F                     _ADCON0bits	set	31
   387     005F                     _GIE	set	95
   388     005E                     _PEIE	set	94
   389     0066                     _ADIF	set	102
   390     0064                     _TXIF	set	100
   391     009F                     _ADCON1bits	set	159
   392     0098                     _TXSTAbits	set	152
   393     0099                     _SPBRG	set	153
   394     009A                     _SPBRGH	set	154
   395     008F                     _OSCCONbits	set	143
   396     0088                     _TRISD	set	136
   397     0087                     _TRISC	set	135
   398     0086                     _TRISB	set	134
   399     0085                     _TRISA	set	133
   400     008C                     _PIE1bits	set	140
   401     0466                     _ADIE	set	1126
   402     0189                     _ANSELH	set	393
   403     0188                     _ANSEL	set	392
   404                           
   405                           	psect	strings
   406     001F                     __pstrings:
   407     001F                     stringtab:
   408     001F                     __stringtab:
   409                           
   410                           ;	String table - string pointers are 1 byte each
   411     001F  1BFF               	btfsc	btemp+1,7
   412     0020  2829               	ljmp	stringcode
   413     0021  1383               	bcf	3,7
   414     0022  187F               	btfsc	btemp+1,0
   415     0023  1783               	bsf	3,7
   416     0024  0800               	movf	0,w
   417     0025  0A84               	incf	4,f
   418     0026  1903               	skipnz
   419     0027  0AFF               	incf	btemp+1,f
   420     0028  0008               	return
   421     0029                     stringcode:
   422     0029                     stringdir:
   423     0029  3000               	movlw	high stringdir
   424     002A  008A               	movwf	10
   425     002B  0804               	movf	4,w
   426     002C  0A84               	incf	4,f
   427     002D  0782               	addwf	2,f
   428     002E                     __stringbase:
   429     002E  3400               	retlw	0
   430     002F                     __end_of__stringtab:
   431     002F                     STR_5:
   432     002F  3449               	retlw	73	;'I'
   433     0030  346E               	retlw	110	;'n'
   434     0031  3467               	retlw	103	;'g'
   435     0032  3472               	retlw	114	;'r'
   436     0033  3465               	retlw	101	;'e'
   437     0034  3473               	retlw	115	;'s'
   438     0035  3465               	retlw	101	;'e'
   439     0036  3420               	retlw	32	;' '
   440     0037  3463               	retlw	99	;'c'
   441     0038  3461               	retlw	97	;'a'
   442     0039  3472               	retlw	114	;'r'
   443     003A  3461               	retlw	97	;'a'
   444     003B  3463               	retlw	99	;'c'
   445     003C  3474               	retlw	116	;'t'
   446     003D  3465               	retlw	101	;'e'
   447     003E  3472               	retlw	114	;'r'
   448     003F  3420               	retlw	32	;' '
   449     0040  3441               	retlw	65	;'A'
   450     0041  3453               	retlw	83	;'S'
   451     0042  3443               	retlw	67	;'C'
   452     0043  3449               	retlw	73	;'I'
   453     0044  3449               	retlw	73	;'I'
   454     0045  3420               	retlw	32	;' '
   455     0046  3470               	retlw	112	;'p'
   456     0047  3461               	retlw	97	;'a'
   457     0048  3472               	retlw	114	;'r'
   458     0049  3461               	retlw	97	;'a'
   459     004A  3420               	retlw	32	;' '
   460     004B  346D               	retlw	109	;'m'
   461     004C  346F               	retlw	111	;'o'
   462     004D  3473               	retlw	115	;'s'
   463     004E  3474               	retlw	116	;'t'
   464     004F  3472               	retlw	114	;'r'
   465     0050  3461               	retlw	97	;'a'
   466     0051  3472               	retlw	114	;'r'
   467     0052  343A               	retlw	58	;':'
   468     0053  3420               	retlw	32	;' '
   469     0054  340A               	retlw	10
   470     0055  3400               	retlw	0
   471     0056                     STR_4:
   472     0056  3445               	retlw	69	;'E'
   473     0057  346C               	retlw	108	;'l'
   474     0058  3420               	retlw	32	;' '
   475     0059  3476               	retlw	118	;'v'
   476     005A  3461               	retlw	97	;'a'
   477     005B  346C               	retlw	108	;'l'
   478     005C  346F               	retlw	111	;'o'
   479     005D  3472               	retlw	114	;'r'
   480     005E  3420               	retlw	32	;' '
   481     005F  3464               	retlw	100	;'d'
   482     0060  3465               	retlw	101	;'e'
   483     0061  346C               	retlw	108	;'l'
   484     0062  3420               	retlw	32	;' '
   485     0063  3470               	retlw	112	;'p'
   486     0064  346F               	retlw	111	;'o'
   487     0065  3474               	retlw	116	;'t'
   488     0066  3465               	retlw	101	;'e'
   489     0067  346E               	retlw	110	;'n'
   490     0068  3463               	retlw	99	;'c'
   491     0069  3469               	retlw	105	;'i'
   492     006A  346F               	retlw	111	;'o'
   493     006B  346D               	retlw	109	;'m'
   494     006C  3465               	retlw	101	;'e'
   495     006D  3474               	retlw	116	;'t'
   496     006E  3472               	retlw	114	;'r'
   497     006F  346F               	retlw	111	;'o'
   498     0070  3420               	retlw	32	;' '
   499     0071  3465               	retlw	101	;'e'
   500     0072  3473               	retlw	115	;'s'
   501     0073  343A               	retlw	58	;':'
   502     0074  3420               	retlw	32	;' '
   503     0075  340A               	retlw	10
   504     0076  3400               	retlw	0
   505     0077                     STR_1:
   506     0077  340A               	retlw	10
   507     0078  3420               	retlw	32	;' '
   508     0079  344D               	retlw	77	;'M'
   509     007A  3465               	retlw	101	;'e'
   510     007B  346E               	retlw	110	;'n'
   511     007C  3475               	retlw	117	;'u'
   512     007D  342C               	retlw	44	;','
   513     007E  3420               	retlw	32	;' '
   514     007F  3453               	retlw	83	;'S'
   515     0080  3465               	retlw	101	;'e'
   516     0081  346C               	retlw	108	;'l'
   517     0082  3465               	retlw	101	;'e'
   518     0083  3463               	retlw	99	;'c'
   519     0084  3463               	retlw	99	;'c'
   520     0085  3469               	retlw	105	;'i'
   521     0086  346F               	retlw	111	;'o'
   522     0087  346E               	retlw	110	;'n'
   523     0088  3465               	retlw	101	;'e'
   524     0089  3420               	retlw	32	;' '
   525     008A  346F               	retlw	111	;'o'
   526     008B  3470               	retlw	112	;'p'
   527     008C  3463               	retlw	99	;'c'
   528     008D  3469               	retlw	105	;'i'
   529     008E  346F               	retlw	111	;'o'
   530     008F  346E               	retlw	110	;'n'
   531     0090  3420               	retlw	32	;' '
   532     0091  340D               	retlw	13
   533     0092  340A               	retlw	10
   534     0093  3400               	retlw	0
   535     0094                     STR_2:
   536     0094  3461               	retlw	97	;'a'
   537     0095  342E               	retlw	46	;'.'
   538     0096  3420               	retlw	32	;' '
   539     0097  344C               	retlw	76	;'L'
   540     0098  3465               	retlw	101	;'e'
   541     0099  3465               	retlw	101	;'e'
   542     009A  3472               	retlw	114	;'r'
   543     009B  3420               	retlw	32	;' '
   544     009C  3470               	retlw	112	;'p'
   545     009D  346F               	retlw	111	;'o'
   546     009E  3474               	retlw	116	;'t'
   547     009F  3465               	retlw	101	;'e'
   548     00A0  346E               	retlw	110	;'n'
   549     00A1  3463               	retlw	99	;'c'
   550     00A2  3469               	retlw	105	;'i'
   551     00A3  346F               	retlw	111	;'o'
   552     00A4  346D               	retlw	109	;'m'
   553     00A5  3465               	retlw	101	;'e'
   554     00A6  3474               	retlw	116	;'t'
   555     00A7  3472               	retlw	114	;'r'
   556     00A8  346F               	retlw	111	;'o'
   557     00A9  3420               	retlw	32	;' '
   558     00AA  340D               	retlw	13
   559     00AB  340A               	retlw	10
   560     00AC  3400               	retlw	0
   561     00AD                     STR_3:
   562     00AD  3462               	retlw	98	;'b'
   563     00AE  342E               	retlw	46	;'.'
   564     00AF  3420               	retlw	32	;' '
   565     00B0  3445               	retlw	69	;'E'
   566     00B1  346E               	retlw	110	;'n'
   567     00B2  3476               	retlw	118	;'v'
   568     00B3  3469               	retlw	105	;'i'
   569     00B4  3461               	retlw	97	;'a'
   570     00B5  3472               	retlw	114	;'r'
   571     00B6  3420               	retlw	32	;' '
   572     00B7  3441               	retlw	65	;'A'
   573     00B8  3453               	retlw	83	;'S'
   574     00B9  3443               	retlw	67	;'C'
   575     00BA  3449               	retlw	73	;'I'
   576     00BB  3449               	retlw	73	;'I'
   577     00BC  3420               	retlw	32	;' '
   578     00BD  340D               	retlw	13
   579     00BE  340A               	retlw	10
   580     00BF  3400               	retlw	0
   581                           
   582                           	psect	cinit
   583     0015                     start_initialization:	
   584                           ; #config settings
   585                           
   586     0015                     __initialization:
   587                           
   588                           ; Clear objects allocated to BANK0
   589     0015  1283               	bcf	3,5	;RP0=0, select bank0
   590     0016  1303               	bcf	3,6	;RP1=0, select bank0
   591     0017  01B4               	clrf	__pbssBANK0& (0+127)
   592     0018  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   593     0019  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   594     001A  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   595     001B                     end_of_initialization:	
   596                           ;End of C runtime variable initialization code
   597                           
   598     001B                     __end_of__initialization:
   599     001B  0183               	clrf	3
   600     001C  120A  118A  2A6E   	ljmp	_main	;jump to C main() function
   601                           
   602                           	psect	bssBANK0
   603     0034                     __pbssBANK0:
   604     0034                     _Menu_Flag:
   605     0034                     	ds	1
   606     0035                     _Selector:
   607     0035                     	ds	1
   608     0036                     _ADC1:
   609     0036                     	ds	1
   610     0037                     _Potentiometer:
   611     0037                     	ds	1
   612                           
   613                           	psect	cstackCOMMON
   614     0070                     __pcstackCOMMON:
   615     0070                     ?_ADC_Int:
   616     0070                     ?_EUSART_Init:	
   617                           ; 1 bytes @ 0x0
   618                           
   619     0070                     ?_EUSART_Enable_Isr:	
   620                           ; 1 bytes @ 0x0
   621                           
   622     0070                     ?_ADC_Capture:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     ?_Texto:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0070                     ?_Menu:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0070                     ?_isr:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0070                     ?_Setup:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     ?_Int_Enable:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ?_main:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0070                     ?___lwdiv:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ?___lwmod:	
   647                           ; 2 bytes @ 0x0
   648                           
   649     0070                     Texto@text:	
   650                           ; 2 bytes @ 0x0
   651                           
   652     0070                     ___lwdiv@divisor:	
   653                           ; 2 bytes @ 0x0
   654                           
   655     0070                     ___lwmod@divisor:	
   656                           ; 2 bytes @ 0x0
   657                           
   658                           
   659                           ; 2 bytes @ 0x0
   660     0070                     	ds	2
   661     0072                     ??_Texto:
   662     0072                     ??_Menu:	
   663                           ; 1 bytes @ 0x2
   664                           
   665     0072                     ___lwdiv@dividend:	
   666                           ; 1 bytes @ 0x2
   667                           
   668     0072                     ___lwmod@dividend:	
   669                           ; 2 bytes @ 0x2
   670                           
   671                           
   672                           ; 2 bytes @ 0x2
   673     0072                     	ds	2
   674     0074                     ??___lwdiv:
   675     0074                     ??___lwmod:	
   676                           ; 1 bytes @ 0x4
   677                           
   678                           
   679                           ; 1 bytes @ 0x4
   680     0074                     	ds	1
   681     0075                     ___lwmod@counter:
   682     0075                     ___lwdiv@quotient:	
   683                           ; 1 bytes @ 0x5
   684                           
   685                           
   686                           ; 2 bytes @ 0x5
   687     0075                     	ds	2
   688     0077                     ___lwdiv@counter:
   689                           
   690                           ; 1 bytes @ 0x7
   691     0077                     	ds	1
   692     0078                     ?_utoa:
   693     0078                     utoa@val:	
   694                           ; 1 bytes @ 0x8
   695                           
   696                           
   697                           ; 2 bytes @ 0x8
   698     0078                     	ds	2
   699     007A                     utoa@base:
   700                           
   701                           ; 2 bytes @ 0xA
   702     007A                     	ds	2
   703     007C                     ??_utoa:
   704                           
   705                           ; 1 bytes @ 0xC
   706     007C                     	ds	1
   707     007D                     ??_itoa:
   708                           
   709                           ; 1 bytes @ 0xD
   710     007D                     	ds	1
   711                           
   712                           	psect	cstackBANK0
   713     0020                     __pcstackBANK0:
   714     0020                     utoa@v:
   715                           
   716                           ; 2 bytes @ 0x0
   717     0020                     	ds	2
   718     0022                     utoa@c:
   719                           
   720                           ; 1 bytes @ 0x2
   721     0022                     	ds	1
   722     0023                     utoa@buf:
   723                           
   724                           ; 1 bytes @ 0x3
   725     0023                     	ds	1
   726     0024                     ?_itoa:
   727     0024                     itoa@val:	
   728                           ; 1 bytes @ 0x4
   729                           
   730                           
   731                           ; 2 bytes @ 0x4
   732     0024                     	ds	2
   733     0026                     itoa@base:
   734                           
   735                           ; 2 bytes @ 0x6
   736     0026                     	ds	2
   737     0028                     itoa@buf:
   738                           
   739                           ; 1 bytes @ 0x8
   740     0028                     	ds	1
   741     0029                     ??_isr:
   742                           
   743                           ; 1 bytes @ 0x9
   744     0029                     	ds	6
   745     002F                     ??_ADC_Int:
   746     002F                     ?_ADC_Select:	
   747                           ; 1 bytes @ 0xF
   748                           
   749     002F                     ??_EUSART_Init:	
   750                           ; 1 bytes @ 0xF
   751                           
   752     002F                     ??_EUSART_Enable_Isr:	
   753                           ; 1 bytes @ 0xF
   754                           
   755     002F                     ??_ADC_Capture:	
   756                           ; 1 bytes @ 0xF
   757                           
   758     002F                     ??_Setup:	
   759                           ; 1 bytes @ 0xF
   760                           
   761     002F                     ??_Int_Enable:	
   762                           ; 1 bytes @ 0xF
   763                           
   764     002F                     ADC_Int@ADFM_Select:	
   765                           ; 1 bytes @ 0xF
   766                           
   767     002F                     ADC_Select@channel:	
   768                           ; 1 bytes @ 0xF
   769                           
   770                           
   771                           ; 2 bytes @ 0xF
   772     002F                     	ds	2
   773     0031                     ??_ADC_Select:
   774                           
   775                           ; 1 bytes @ 0x11
   776     0031                     	ds	3
   777     0034                     ??_main:
   778                           
   779                           	psect	maintext
   780     026E                     __pmaintext:	
   781                           ; 1 bytes @ 0x14
   782 ;;
   783 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   784 ;;
   785 ;; *************** function _main *****************
   786 ;; Defined at:
   787 ;;		line 164 in file "Lab8.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0, pclath, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : B00/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0
   804 ;;      Totals:         0       0       0       0       0
   805 ;;Total ram usage:        0 bytes
   806 ;; Hardware stack levels required when called: 5
   807 ;; This function calls:
   808 ;;		_ADC_Capture
   809 ;;		_ADC_Int
   810 ;;		_ADC_Select
   811 ;;		_EUSART_Enable_Isr
   812 ;;		_EUSART_Init
   813 ;;		_Int_Enable
   814 ;;		_Setup
   815 ;; This function is called by:
   816 ;;		Startup code after reset
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820     026E                     _main:	
   821                           ;psect for function _main
   822                           
   823     026E                     l1131:	
   824                           ;incstack = 0
   825                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   826                           
   827                           
   828                           ;Lab8.c: 166:     Setup();
   829     026E  120A  118A  229B  120A  118A  	fcall	_Setup
   830     0273                     l1133:
   831                           
   832                           ;Lab8.c: 167:     Int_Enable();
   833     0273  120A  118A  235B  120A  118A  	fcall	_Int_Enable
   834     0278                     l1135:
   835                           
   836                           ;Lab8.c: 168:     ADC_Int(0);
   837     0278  3000               	movlw	0
   838     0279  120A  118A  233F  120A  118A  	fcall	_ADC_Int
   839     027E                     l1137:
   840                           
   841                           ;Lab8.c: 169:     ADC_Select(0);
   842     027E  3000               	movlw	0
   843     027F  1283               	bcf	3,5	;RP0=0, select bank0
   844     0280  1303               	bcf	3,6	;RP1=0, select bank0
   845     0281  00AF               	movwf	ADC_Select@channel
   846     0282  00B0               	movwf	ADC_Select@channel+1
   847     0283  120A  118A  21A7  120A  118A  	fcall	_ADC_Select
   848     0288                     l1139:
   849                           
   850                           ;Lab8.c: 170:     EUSART_Init();
   851     0288  120A  118A  2327  120A  118A  	fcall	_EUSART_Init
   852                           
   853                           ;Lab8.c: 171:     EUSART_Enable_Isr();
   854     028D  120A  118A  2364  120A  118A  	fcall	_EUSART_Enable_Isr
   855     0292                     l107:	
   856                           ;Lab8.c: 173:     while(1)
   857                           
   858                           
   859                           ;Lab8.c: 174:     {;Lab8.c: 175:         ADC_Capture();
   860     0292  120A  118A  234E  120A  118A  	fcall	_ADC_Capture
   861     0297  2A92               	goto	l107
   862     0298  120A  118A  2812   	ljmp	start
   863     029B                     __end_of_main:
   864                           
   865                           	psect	text1
   866     029B                     __ptext1:	
   867 ;; *************** function _Setup *****************
   868 ;; Defined at:
   869 ;;		line 134 in file "Lab8.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0
   886 ;;      Totals:         0       0       0       0       0
   887 ;;Total ram usage:        0 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; Hardware stack levels required when called: 4
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897     029B                     _Setup:	
   898                           ;psect for function _Setup
   899                           
   900     029B                     l1051:	
   901                           ;incstack = 0
   902                           ; Regs used in _Setup: [wreg+status,2+status,0]
   903                           
   904                           
   905                           ;Lab8.c: 136:     ANSEL = 0x01;
   906     029B  3001               	movlw	1
   907     029C  1683               	bsf	3,5	;RP0=1, select bank3
   908     029D  1703               	bsf	3,6	;RP1=1, select bank3
   909     029E  0088               	movwf	8	;volatile
   910     029F                     l1053:
   911                           
   912                           ;Lab8.c: 137:     ANSELH = 0x00;
   913     029F  0189               	clrf	9	;volatile
   914     02A0                     l1055:
   915                           
   916                           ;Lab8.c: 138:     TRISA = 0x01;
   917     02A0  3001               	movlw	1
   918     02A1  1683               	bsf	3,5	;RP0=1, select bank1
   919     02A2  1303               	bcf	3,6	;RP1=0, select bank1
   920     02A3  0085               	movwf	5	;volatile
   921                           
   922                           ;Lab8.c: 139:     PORTA = 0;
   923     02A4  1283               	bcf	3,5	;RP0=0, select bank0
   924     02A5  1303               	bcf	3,6	;RP1=0, select bank0
   925     02A6  0185               	clrf	5	;volatile
   926                           
   927                           ;Lab8.c: 140:     TRISB = 0;
   928     02A7  1683               	bsf	3,5	;RP0=1, select bank1
   929     02A8  1303               	bcf	3,6	;RP1=0, select bank1
   930     02A9  0186               	clrf	6	;volatile
   931                           
   932                           ;Lab8.c: 141:     PORTB = 0;
   933     02AA  1283               	bcf	3,5	;RP0=0, select bank0
   934     02AB  1303               	bcf	3,6	;RP1=0, select bank0
   935     02AC  0186               	clrf	6	;volatile
   936                           
   937                           ;Lab8.c: 142:     TRISC = 0;
   938     02AD  1683               	bsf	3,5	;RP0=1, select bank1
   939     02AE  1303               	bcf	3,6	;RP1=0, select bank1
   940     02AF  0187               	clrf	7	;volatile
   941                           
   942                           ;Lab8.c: 143:     PORTC = 0;
   943     02B0  1283               	bcf	3,5	;RP0=0, select bank0
   944     02B1  1303               	bcf	3,6	;RP1=0, select bank0
   945     02B2  0187               	clrf	7	;volatile
   946                           
   947                           ;Lab8.c: 144:     TRISD = 0;
   948     02B3  1683               	bsf	3,5	;RP0=1, select bank1
   949     02B4  1303               	bcf	3,6	;RP1=0, select bank1
   950     02B5  0188               	clrf	8	;volatile
   951                           
   952                           ;Lab8.c: 145:     PORTD = 0;
   953     02B6  1283               	bcf	3,5	;RP0=0, select bank0
   954     02B7  1303               	bcf	3,6	;RP1=0, select bank0
   955     02B8  0188               	clrf	8	;volatile
   956     02B9                     l1057:
   957                           
   958                           ;Lab8.c: 148:     OSCCONbits.IRCF = 0b0110;
   959     02B9  1683               	bsf	3,5	;RP0=1, select bank1
   960     02BA  1303               	bcf	3,6	;RP1=0, select bank1
   961     02BB  080F               	movf	15,w	;volatile
   962     02BC  398F               	andlw	-113
   963     02BD  3860               	iorlw	96
   964     02BE  008F               	movwf	15	;volatile
   965     02BF                     l1059:
   966                           
   967                           ;Lab8.c: 149:     OSCCONbits.SCS = 1;
   968     02BF  140F               	bsf	15,0	;volatile
   969     02C0                     l99:
   970     02C0  0008               	return
   971     02C1                     __end_of_Setup:
   972                           
   973                           	psect	text2
   974     035B                     __ptext2:	
   975 ;; *************** function _Int_Enable *****************
   976 ;; Defined at:
   977 ;;		line 152 in file "Lab8.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		None
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0
   994 ;;      Totals:         0       0       0       0       0
   995 ;;Total ram usage:        0 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; Hardware stack levels required when called: 4
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005     035B                     _Int_Enable:	
  1006                           ;psect for function _Int_Enable
  1007                           
  1008     035B                     l1061:	
  1009                           ;incstack = 0
  1010                           ; Regs used in _Int_Enable: []
  1011                           
  1012                           
  1013                           ;Lab8.c: 154:     ADIF = 0;
  1014     035B  1283               	bcf	3,5	;RP0=0, select bank0
  1015     035C  1303               	bcf	3,6	;RP1=0, select bank0
  1016     035D  130C               	bcf	12,6	;volatile
  1017                           
  1018                           ;Lab8.c: 155:     ADIE = 1;
  1019     035E  1683               	bsf	3,5	;RP0=1, select bank1
  1020     035F  1303               	bcf	3,6	;RP1=0, select bank1
  1021     0360  170C               	bsf	12,6	;volatile
  1022                           
  1023                           ;Lab8.c: 156:     PEIE = 1;
  1024     0361  170B               	bsf	11,6	;volatile
  1025                           
  1026                           ;Lab8.c: 157:     GIE = 1;
  1027     0362  178B               	bsf	11,7	;volatile
  1028     0363                     l102:
  1029     0363  0008               	return
  1030     0364                     __end_of_Int_Enable:
  1031                           
  1032                           	psect	text3
  1033     0327                     __ptext3:	
  1034 ;; *************** function _EUSART_Init *****************
  1035 ;; Defined at:
  1036 ;;		line 3 in file "EUSART.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;		None
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0
  1053 ;;      Totals:         0       0       0       0       0
  1054 ;;Total ram usage:        0 bytes
  1055 ;; Hardware stack levels used: 1
  1056 ;; Hardware stack levels required when called: 4
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064     0327                     _EUSART_Init:	
  1065                           ;psect for function _EUSART_Init
  1066                           
  1067     0327                     l1073:	
  1068                           ;incstack = 0
  1069                           ; Regs used in _EUSART_Init: [wreg+status,2]
  1070                           
  1071                           
  1072                           ;EUSART.c: 5:     SPBRGH = 0;
  1073     0327  1683               	bsf	3,5	;RP0=1, select bank1
  1074     0328  1303               	bcf	3,6	;RP1=0, select bank1
  1075     0329  019A               	clrf	26	;volatile
  1076     032A                     l1075:
  1077                           
  1078                           ;EUSART.c: 6:     SPBRG = 25;
  1079     032A  3019               	movlw	25
  1080     032B  0099               	movwf	25	;volatile
  1081     032C                     l1077:
  1082                           
  1083                           ;EUSART.c: 8:     RCSTAbits.SPEN = 1;
  1084     032C  1283               	bcf	3,5	;RP0=0, select bank0
  1085     032D  1303               	bcf	3,6	;RP1=0, select bank0
  1086     032E  1798               	bsf	24,7	;volatile
  1087     032F                     l1079:
  1088                           
  1089                           ;EUSART.c: 10:     TXSTAbits.TXEN = 1;
  1090     032F  1683               	bsf	3,5	;RP0=1, select bank1
  1091     0330  1303               	bcf	3,6	;RP1=0, select bank1
  1092     0331  1698               	bsf	24,5	;volatile
  1093     0332                     l1081:
  1094                           
  1095                           ;EUSART.c: 11:     RCSTAbits.CREN = 1;
  1096     0332  1283               	bcf	3,5	;RP0=0, select bank0
  1097     0333  1303               	bcf	3,6	;RP1=0, select bank0
  1098     0334  1618               	bsf	24,4	;volatile
  1099     0335                     l1083:
  1100                           
  1101                           ;EUSART.c: 13:     TXSTAbits.SYNC = 0;
  1102     0335  1683               	bsf	3,5	;RP0=1, select bank1
  1103     0336  1303               	bcf	3,6	;RP1=0, select bank1
  1104     0337  1218               	bcf	24,4	;volatile
  1105     0338                     l1085:
  1106                           
  1107                           ;EUSART.c: 14:     TXSTAbits.BRGH = 1;
  1108     0338  1518               	bsf	24,2	;volatile
  1109     0339                     l1087:
  1110                           
  1111                           ;EUSART.c: 15:     TXSTAbits.SENDB = 1;
  1112     0339  1598               	bsf	24,3	;volatile
  1113     033A                     l1089:
  1114                           
  1115                           ;EUSART.c: 17:     TXSTAbits.TX9 = 0;
  1116     033A  1318               	bcf	24,6	;volatile
  1117     033B                     l1091:
  1118                           
  1119                           ;EUSART.c: 18:     RCSTAbits.RX9 = 0;
  1120     033B  1283               	bcf	3,5	;RP0=0, select bank0
  1121     033C  1303               	bcf	3,6	;RP1=0, select bank0
  1122     033D  1318               	bcf	24,6	;volatile
  1123     033E                     l123:
  1124     033E  0008               	return
  1125     033F                     __end_of_EUSART_Init:
  1126                           
  1127                           	psect	text4
  1128     0364                     __ptext4:	
  1129 ;; *************** function _EUSART_Enable_Isr *****************
  1130 ;; Defined at:
  1131 ;;		line 23 in file "EUSART.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		None
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0
  1148 ;;      Totals:         0       0       0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 4
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159     0364                     _EUSART_Enable_Isr:	
  1160                           ;psect for function _EUSART_Enable_Isr
  1161                           
  1162     0364                     l1093:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _EUSART_Enable_Isr: []
  1165                           
  1166                           
  1167                           ;EUSART.c: 25:     PIE1bits.RCIE = 1;
  1168     0364  1683               	bsf	3,5	;RP0=1, select bank1
  1169     0365  1303               	bcf	3,6	;RP1=0, select bank1
  1170     0366  168C               	bsf	12,5	;volatile
  1171                           
  1172                           ;EUSART.c: 26:     PIE1bits.TXIE = 1;
  1173     0367  160C               	bsf	12,4	;volatile
  1174     0368                     l126:
  1175     0368  0008               	return
  1176     0369                     __end_of_EUSART_Enable_Isr:
  1177                           
  1178                           	psect	text5
  1179     01A7                     __ptext5:	
  1180 ;; *************** function _ADC_Select *****************
  1181 ;; Defined at:
  1182 ;;		line 11 in file "../Lab8_Vel18352.X/ADC.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  channel         2   15[BANK0 ] int 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         0       2       0       0       0
  1197 ;;      Locals:         0       0       0       0       0
  1198 ;;      Temps:          0       3       0       0       0
  1199 ;;      Totals:         0       5       0       0       0
  1200 ;;Total ram usage:        5 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; Hardware stack levels required when called: 4
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210     01A7                     _ADC_Select:	
  1211                           ;psect for function _ADC_Select
  1212                           
  1213     01A7                     l1071:	
  1214                           ;incstack = 0
  1215                           ; Regs used in _ADC_Select: [wreg+status,2+status,0]
  1216                           
  1217                           
  1218                           ;../Lab8_Vel18352.X/ADC.c: 11: void ADC_Select(int channel);../Lab8_Vel18352.X/ADC.c: 12
      +                          : {;../Lab8_Vel18352.X/ADC.c: 13:     ADCON0bits.CHS0 = (channel >> 0) & 0x01;
  1219     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1220     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1221     01A9  082F               	movf	ADC_Select@channel,w
  1222     01AA  3901               	andlw	1
  1223     01AB  00B1               	movwf	??_ADC_Select
  1224     01AC  0DB1               	rlf	??_ADC_Select,f
  1225     01AD  0DB1               	rlf	??_ADC_Select,f
  1226     01AE  081F               	movf	31,w	;volatile
  1227     01AF  0631               	xorwf	??_ADC_Select,w
  1228     01B0  39FB               	andlw	-5
  1229     01B1  0631               	xorwf	??_ADC_Select,w
  1230     01B2  009F               	movwf	31	;volatile
  1231                           
  1232                           ;../Lab8_Vel18352.X/ADC.c: 14:     ADCON0bits.CHS1 = (channel >> 1) & 0x01;
  1233     01B3  0830               	movf	ADC_Select@channel+1,w
  1234     01B4  00B2               	movwf	??_ADC_Select+1
  1235     01B5  082F               	movf	ADC_Select@channel,w
  1236     01B6  00B1               	movwf	??_ADC_Select
  1237     01B7  0D32               	rlf	??_ADC_Select+1,w
  1238     01B8  0CB2               	rrf	??_ADC_Select+1,f
  1239     01B9  0CB1               	rrf	??_ADC_Select,f
  1240     01BA  0831               	movf	??_ADC_Select,w
  1241     01BB  3901               	andlw	1
  1242     01BC  00B3               	movwf	??_ADC_Select+2
  1243     01BD  0DB3               	rlf	??_ADC_Select+2,f
  1244     01BE  0DB3               	rlf	??_ADC_Select+2,f
  1245     01BF  0DB3               	rlf	??_ADC_Select+2,f
  1246     01C0  081F               	movf	31,w	;volatile
  1247     01C1  0633               	xorwf	??_ADC_Select+2,w
  1248     01C2  39F7               	andlw	-9
  1249     01C3  0633               	xorwf	??_ADC_Select+2,w
  1250     01C4  009F               	movwf	31	;volatile
  1251                           
  1252                           ;../Lab8_Vel18352.X/ADC.c: 15:     ADCON0bits.CHS2 = (channel >> 2) & 0x01;
  1253     01C5  0830               	movf	ADC_Select@channel+1,w
  1254     01C6  00B2               	movwf	??_ADC_Select+1
  1255     01C7  082F               	movf	ADC_Select@channel,w
  1256     01C8  00B1               	movwf	??_ADC_Select
  1257     01C9  0D32               	rlf	??_ADC_Select+1,w
  1258     01CA  0CB2               	rrf	??_ADC_Select+1,f
  1259     01CB  0CB1               	rrf	??_ADC_Select,f
  1260     01CC  0D32               	rlf	??_ADC_Select+1,w
  1261     01CD  0CB2               	rrf	??_ADC_Select+1,f
  1262     01CE  0CB1               	rrf	??_ADC_Select,f
  1263     01CF  0831               	movf	??_ADC_Select,w
  1264     01D0  3901               	andlw	1
  1265     01D1  00B3               	movwf	??_ADC_Select+2
  1266     01D2  0EB3               	swapf	??_ADC_Select+2,f
  1267     01D3  081F               	movf	31,w	;volatile
  1268     01D4  0633               	xorwf	??_ADC_Select+2,w
  1269     01D5  39EF               	andlw	-17
  1270     01D6  0633               	xorwf	??_ADC_Select+2,w
  1271     01D7  009F               	movwf	31	;volatile
  1272                           
  1273                           ;../Lab8_Vel18352.X/ADC.c: 16:     ADCON0bits.CHS3 = (channel >> 3) & 0x01;
  1274     01D8  0830               	movf	ADC_Select@channel+1,w
  1275     01D9  00B2               	movwf	??_ADC_Select+1
  1276     01DA  082F               	movf	ADC_Select@channel,w
  1277     01DB  00B1               	movwf	??_ADC_Select
  1278     01DC  0D32               	rlf	??_ADC_Select+1,w
  1279     01DD  0CB2               	rrf	??_ADC_Select+1,f
  1280     01DE  0CB1               	rrf	??_ADC_Select,f
  1281     01DF  0D32               	rlf	??_ADC_Select+1,w
  1282     01E0  0CB2               	rrf	??_ADC_Select+1,f
  1283     01E1  0CB1               	rrf	??_ADC_Select,f
  1284     01E2  0D32               	rlf	??_ADC_Select+1,w
  1285     01E3  0CB2               	rrf	??_ADC_Select+1,f
  1286     01E4  0CB1               	rrf	??_ADC_Select,f
  1287     01E5  0831               	movf	??_ADC_Select,w
  1288     01E6  3901               	andlw	1
  1289     01E7  00B3               	movwf	??_ADC_Select+2
  1290     01E8  0EB3               	swapf	??_ADC_Select+2,f
  1291     01E9  0DB3               	rlf	??_ADC_Select+2,f
  1292     01EA  081F               	movf	31,w	;volatile
  1293     01EB  0633               	xorwf	??_ADC_Select+2,w
  1294     01EC  39DF               	andlw	-33
  1295     01ED  0633               	xorwf	??_ADC_Select+2,w
  1296     01EE  009F               	movwf	31	;volatile
  1297     01EF                     l141:
  1298     01EF  0008               	return
  1299     01F0                     __end_of_ADC_Select:
  1300                           
  1301                           	psect	text6
  1302     033F                     __ptext6:	
  1303 ;; *************** function _ADC_Int *****************
  1304 ;; Defined at:
  1305 ;;		line 3 in file "../Lab8_Vel18352.X/ADC.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  ADFM_Select     1    wreg     unsigned char 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  ADFM_Select     1   15[BANK0 ] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, status,0
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         0       0       0       0       0
  1320 ;;      Locals:         0       1       0       0       0
  1321 ;;      Temps:          0       0       0       0       0
  1322 ;;      Totals:         0       1       0       0       0
  1323 ;;Total ram usage:        1 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; Hardware stack levels required when called: 4
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333     033F                     _ADC_Int:	
  1334                           ;psect for function _ADC_Int
  1335                           
  1336                           
  1337                           ;incstack = 0
  1338                           ; Regs used in _ADC_Int: [wreg+status,0]
  1339                           ;ADC_Int@ADFM_Select stored from wreg
  1340     033F  1283               	bcf	3,5	;RP0=0, select bank0
  1341     0340  1303               	bcf	3,6	;RP1=0, select bank0
  1342     0341  00AF               	movwf	ADC_Int@ADFM_Select
  1343     0342                     l1063:
  1344                           
  1345                           ;../Lab8_Vel18352.X/ADC.c: 3: void ADC_Int(uint8_t ADFM_Select);../Lab8_Vel18352.X/ADC.c
      +                          : 4: {;../Lab8_Vel18352.X/ADC.c: 5:     ADCON0 = 0b10000001;
  1346     0342  3081               	movlw	129
  1347     0343  009F               	movwf	31	;volatile
  1348     0344                     l1065:
  1349                           
  1350                           ;../Lab8_Vel18352.X/ADC.c: 6:     ADCON1bits.ADFM = ADFM_Select;
  1351     0344  0C2F               	rrf	ADC_Int@ADFM_Select,w
  1352     0345  1683               	bsf	3,5	;RP0=1, select bank1
  1353     0346  1303               	bcf	3,6	;RP1=0, select bank1
  1354     0347  1C03               	skipc
  1355     0348  139F               	bcf	31,7	;volatile
  1356     0349  1803               	skipnc
  1357     034A  179F               	bsf	31,7	;volatile
  1358     034B                     l1067:
  1359                           
  1360                           ;../Lab8_Vel18352.X/ADC.c: 7:     ADCON1bits.VCFG1 = 0;
  1361     034B  129F               	bcf	31,5	;volatile
  1362     034C                     l1069:
  1363                           
  1364                           ;../Lab8_Vel18352.X/ADC.c: 8:     ADCON1bits.VCFG0 = 0;
  1365     034C  121F               	bcf	31,4	;volatile
  1366     034D                     l138:
  1367     034D  0008               	return
  1368     034E                     __end_of_ADC_Int:
  1369                           
  1370                           	psect	text7
  1371     034E                     __ptext7:	
  1372 ;; *************** function _ADC_Capture *****************
  1373 ;; Defined at:
  1374 ;;		line 63 in file "Lab8.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		None
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1388 ;;      Params:         0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0
  1391 ;;      Totals:         0       0       0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 4
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402     034E                     _ADC_Capture:	
  1403                           ;psect for function _ADC_Capture
  1404                           
  1405     034E                     l1031:	
  1406                           ;incstack = 0
  1407                           ; Regs used in _ADC_Capture: []
  1408                           
  1409                           
  1410                           ;Lab8.c: 65:     if (ADCON0bits.GO)
  1411     034E  1283               	bcf	3,5	;RP0=0, select bank0
  1412     034F  1303               	bcf	3,6	;RP1=0, select bank0
  1413     0350  1C9F               	btfss	31,1	;volatile
  1414     0351  2B53               	goto	u481
  1415     0352  2B54               	goto	u480
  1416     0353                     u481:
  1417     0353  2B55               	goto	l67
  1418     0354                     u480:
  1419     0354  2B5A               	goto	l66
  1420     0355                     l67:
  1421     0355  189F               	btfsc	31,1	;volatile
  1422     0356  2B58               	goto	u491
  1423     0357  2B59               	goto	u490
  1424     0358                     u491:
  1425     0358  2B55               	goto	l67
  1426     0359                     u490:
  1427     0359                     l69:
  1428                           
  1429                           ;Lab8.c: 70:     ADCON0bits.GO = 1;
  1430     0359  149F               	bsf	31,1	;volatile
  1431     035A                     l66:
  1432     035A  0008               	return
  1433     035B                     __end_of_ADC_Capture:
  1434                           
  1435                           	psect	text8
  1436     00C0                     __ptext8:	
  1437 ;; *************** function _isr *****************
  1438 ;; Defined at:
  1439 ;;		line 94 in file "Lab8.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1453 ;;      Params:         0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0
  1455 ;;      Temps:          0       6       0       0       0
  1456 ;;      Totals:         0       6       0       0       0
  1457 ;;Total ram usage:        6 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 3
  1460 ;; This function calls:
  1461 ;;		_Menu
  1462 ;;		_Texto
  1463 ;;		_itoa
  1464 ;; This function is called by:
  1465 ;;		Interrupt level 1
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469     00C0                     _isr:	
  1470                           ;psect for function _isr
  1471                           
  1472     00C0                     i1l1095:
  1473                           
  1474                           ;Lab8.c: 96:     if (ADIF)
  1475     00C0  1F0C               	btfss	12,6	;volatile
  1476     00C1  28C3               	goto	u51_21
  1477     00C2  28C4               	goto	u51_20
  1478     00C3                     u51_21:
  1479     00C3  28C7               	goto	i1l1101
  1480     00C4                     u51_20:
  1481     00C4                     i1l1097:
  1482                           
  1483                           ;Lab8.c: 97:     {;Lab8.c: 98:         ADC1 = ADRESH;
  1484     00C4  081E               	movf	30,w	;volatile
  1485     00C5  00B6               	movwf	_ADC1
  1486     00C6                     i1l1099:
  1487                           
  1488                           ;Lab8.c: 99:         ADIF = 0;
  1489     00C6  130C               	bcf	12,6	;volatile
  1490     00C7                     i1l1101:
  1491                           
  1492                           ;Lab8.c: 102:     if (PIR1bits.RCIF)
  1493     00C7  1E8C               	btfss	12,5	;volatile
  1494     00C8  28CA               	goto	u52_21
  1495     00C9  28CB               	goto	u52_20
  1496     00CA                     u52_21:
  1497     00CA  2913               	goto	i1l1121
  1498     00CB                     u52_20:
  1499     00CB                     i1l1103:
  1500                           
  1501                           ;Lab8.c: 103:     {;Lab8.c: 104:         Selector = RCREG;
  1502     00CB  081A               	movf	26,w	;volatile
  1503     00CC  00B5               	movwf	_Selector
  1504     00CD                     i1l1105:
  1505                           
  1506                           ;Lab8.c: 105:         if (Selector == 0x61)
  1507     00CD  3061               	movlw	97
  1508     00CE  0635               	xorwf	_Selector,w
  1509     00CF  1D03               	btfss	3,2
  1510     00D0  28D2               	goto	u53_21
  1511     00D1  28D3               	goto	u53_20
  1512     00D2                     u53_21:
  1513     00D2  28F7               	goto	i1l1113
  1514     00D3                     u53_20:
  1515     00D3                     i1l1107:
  1516                           
  1517                           ;Lab8.c: 106:         {;Lab8.c: 107:             itoa(Potentiometer,ADC1,10);
  1518     00D3  0836               	movf	_ADC1,w
  1519     00D4  00A9               	movwf	??_isr
  1520     00D5  01AA               	clrf	??_isr+1
  1521     00D6  0829               	movf	??_isr,w
  1522     00D7  00A4               	movwf	itoa@val
  1523     00D8  082A               	movf	??_isr+1,w
  1524     00D9  00A5               	movwf	itoa@val+1
  1525     00DA  300A               	movlw	10
  1526     00DB  00A6               	movwf	itoa@base
  1527     00DC  3000               	movlw	0
  1528     00DD  00A7               	movwf	itoa@base+1
  1529     00DE  3037               	movlw	(low (_Potentiometer| 0))& (0+255)
  1530     00DF  120A  118A  22E7  120A  118A  	fcall	_itoa
  1531     00E4                     i1l1109:
  1532                           
  1533                           ;Lab8.c: 108:             Texto("El valor del potenciometro es: \n");
  1534     00E4  3028               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1535     00E5  00F0               	movwf	Texto@text
  1536     00E6  3080               	movlw	128
  1537     00E7  00F1               	movwf	Texto@text+1
  1538     00E8  120A  118A  22C1  120A  118A  	fcall	_Texto
  1539     00ED                     i1l1111:
  1540                           
  1541                           ;Lab8.c: 109:             Texto(Potentiometer);
  1542     00ED  3037               	movlw	(low (_Potentiometer| 0))& (0+255)
  1543     00EE  00F0               	movwf	Texto@text
  1544     00EF  3000               	movlw	0
  1545     00F0  00F1               	movwf	Texto@text+1
  1546     00F1  120A  118A  22C1  120A  118A  	fcall	_Texto
  1547                           
  1548                           ;Lab8.c: 111:         }
  1549     00F6  290E               	goto	i1l1119
  1550     00F7                     i1l1113:
  1551     00F7  3062               	movlw	98
  1552     00F8  0635               	xorwf	_Selector,w
  1553     00F9  1D03               	btfss	3,2
  1554     00FA  28FC               	goto	u54_21
  1555     00FB  28FD               	goto	u54_20
  1556     00FC                     u54_21:
  1557     00FC  290E               	goto	i1l1119
  1558     00FD                     u54_20:
  1559     00FD                     i1l1115:
  1560                           
  1561                           ;Lab8.c: 113:         {;Lab8.c: 114:             Texto("Ingrese caracter ASCII para most
      +                          rar: \n");
  1562     00FD  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1563     00FE  00F0               	movwf	Texto@text
  1564     00FF  3080               	movlw	128
  1565     0100  00F1               	movwf	Texto@text+1
  1566     0101  120A  118A  22C1  120A  118A  	fcall	_Texto
  1567     0106                     i1l91:	
  1568                           ;Lab8.c: 115:             while (!PIR1bits.RCIF);
  1569                           
  1570     0106  1283               	bcf	3,5	;RP0=0, select bank0
  1571     0107  1303               	bcf	3,6	;RP1=0, select bank0
  1572     0108  1E8C               	btfss	12,5	;volatile
  1573     0109  290B               	goto	u55_21
  1574     010A  290C               	goto	u55_20
  1575     010B                     u55_21:
  1576     010B  2906               	goto	i1l91
  1577     010C                     u55_20:
  1578     010C                     i1l1117:
  1579                           
  1580                           ;Lab8.c: 116:             PORTB = RCREG;
  1581     010C  081A               	movf	26,w	;volatile
  1582     010D  0086               	movwf	6	;volatile
  1583     010E                     i1l1119:
  1584                           
  1585                           ;Lab8.c: 118:         Menu();
  1586     010E  120A  118A  230B  120A  118A  	fcall	_Menu
  1587     0113                     i1l1121:
  1588                           
  1589                           ;Lab8.c: 121:     if (PIE1bits.TXIE && PIR1bits.TXIF)
  1590     0113  1683               	bsf	3,5	;RP0=1, select bank1
  1591     0114  1303               	bcf	3,6	;RP1=0, select bank1
  1592     0115  1E0C               	btfss	12,4	;volatile
  1593     0116  2918               	goto	u56_21
  1594     0117  2919               	goto	u56_20
  1595     0118                     u56_21:
  1596     0118  292D               	goto	i1l96
  1597     0119                     u56_20:
  1598     0119                     i1l1123:
  1599     0119  1283               	bcf	3,5	;RP0=0, select bank0
  1600     011A  1303               	bcf	3,6	;RP1=0, select bank0
  1601     011B  1E0C               	btfss	12,4	;volatile
  1602     011C  291E               	goto	u57_21
  1603     011D  291F               	goto	u57_20
  1604     011E                     u57_21:
  1605     011E  292D               	goto	i1l96
  1606     011F                     u57_20:
  1607     011F                     i1l1125:
  1608                           
  1609                           ;Lab8.c: 122:     {;Lab8.c: 123:         if (Menu_Flag == 0)
  1610     011F  0834               	movf	_Menu_Flag,w
  1611     0120  1D03               	btfss	3,2
  1612     0121  2923               	goto	u58_21
  1613     0122  2924               	goto	u58_20
  1614     0123                     u58_21:
  1615     0123  292D               	goto	i1l96
  1616     0124                     u58_20:
  1617     0124                     i1l1127:
  1618                           
  1619                           ;Lab8.c: 124:         {;Lab8.c: 125:             Menu();
  1620     0124  120A  118A  230B  120A  118A  	fcall	_Menu
  1621     0129                     i1l1129:
  1622                           
  1623                           ;Lab8.c: 126:             Menu_Flag = 1;
  1624     0129  1283               	bcf	3,5	;RP0=0, select bank0
  1625     012A  1303               	bcf	3,6	;RP1=0, select bank0
  1626     012B  01B4               	clrf	_Menu_Flag
  1627     012C  0AB4               	incf	_Menu_Flag,f
  1628     012D                     i1l96:
  1629     012D  1283               	bcf	3,5	;RP0=0, select bank0
  1630     012E  082E               	movf	??_isr+5,w
  1631     012F  00FF               	movwf	btemp+1
  1632     0130  082D               	movf	??_isr+4,w
  1633     0131  008A               	movwf	10
  1634     0132  082C               	movf	??_isr+3,w
  1635     0133  0084               	movwf	4
  1636     0134  0E2B               	swapf	??_isr+2,w
  1637     0135  0083               	movwf	3
  1638     0136  0EFE               	swapf	btemp,f
  1639     0137  0E7E               	swapf	btemp,w
  1640     0138  0009               	retfie
  1641     0139                     __end_of_isr:
  1642                           
  1643                           	psect	intentry
  1644     0004                     __pintentry:	
  1645                           ;incstack = 0
  1646                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1647                           
  1648     0004                     interrupt_function:
  1649     007E                     saved_w	set	btemp
  1650     0004  00FE               	movwf	btemp
  1651     0005  0E03               	swapf	3,w
  1652     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1653     0007  1303               	bcf	3,6	;RP1=0, select bank0
  1654     0008  00AB               	movwf	??_isr+2
  1655     0009  0804               	movf	4,w
  1656     000A  00AC               	movwf	??_isr+3
  1657     000B  080A               	movf	10,w
  1658     000C  00AD               	movwf	??_isr+4
  1659     000D  087F               	movf	btemp+1,w
  1660     000E  00AE               	movwf	??_isr+5
  1661     000F  120A  118A  28C0   	ljmp	_isr
  1662                           
  1663                           	psect	text9
  1664     02E7                     __ptext9:	
  1665 ;; *************** function _itoa *****************
  1666 ;; Defined at:
  1667 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\itoa.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  buf             1    wreg     PTR unsigned char 
  1670 ;;		 -> Potentiometer(1), 
  1671 ;;  val             2    4[BANK0 ] int 
  1672 ;;  base            2    6[BANK0 ] int 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  1675 ;;		 -> Potentiometer(1), 
  1676 ;;  cp              1    0        PTR unsigned char 
  1677 ;;		 -> Potentiometer(1), 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      PTR unsigned char 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1687 ;;      Params:         0       4       0       0       0
  1688 ;;      Locals:         0       1       0       0       0
  1689 ;;      Temps:          1       0       0       0       0
  1690 ;;      Totals:         1       5       0       0       0
  1691 ;;Total ram usage:        6 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 2
  1694 ;; This function calls:
  1695 ;;		_utoa
  1696 ;; This function is called by:
  1697 ;;		_isr
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701     02E7                     _itoa:	
  1702                           ;psect for function _itoa
  1703                           
  1704                           
  1705                           ;incstack = 0
  1706                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1707                           ;itoa@buf stored from wreg
  1708     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1709     02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1710     02E9  00A8               	movwf	itoa@buf
  1711     02EA                     i1l1037:
  1712     02EA                     i1l1039:
  1713     02EA  1FA5               	btfss	itoa@val+1,7
  1714     02EB  2AED               	goto	u50_21
  1715     02EC  2AEE               	goto	u50_20
  1716     02ED                     u50_21:
  1717     02ED  2AFC               	goto	i1l1047
  1718     02EE                     u50_20:
  1719     02EE                     i1l1041:
  1720     02EE  0828               	movf	itoa@buf,w
  1721     02EF  0084               	movwf	4
  1722     02F0  302D               	movlw	45
  1723     02F1  1383               	bcf	3,7	;select IRP bank0
  1724     02F2  0080               	movwf	0
  1725     02F3                     i1l1043:
  1726     02F3  3001               	movlw	1
  1727     02F4  00FD               	movwf	??_itoa
  1728     02F5  087D               	movf	??_itoa,w
  1729     02F6  07A8               	addwf	itoa@buf,f
  1730     02F7                     i1l1045:
  1731     02F7  09A4               	comf	itoa@val,f
  1732     02F8  09A5               	comf	itoa@val+1,f
  1733     02F9  0AA4               	incf	itoa@val,f
  1734     02FA  1903               	skipnz
  1735     02FB  0AA5               	incf	itoa@val+1,f
  1736     02FC                     i1l1047:
  1737     02FC  0825               	movf	itoa@val+1,w
  1738     02FD  00F9               	movwf	utoa@val+1
  1739     02FE  0824               	movf	itoa@val,w
  1740     02FF  00F8               	movwf	utoa@val
  1741     0300  0827               	movf	itoa@base+1,w
  1742     0301  00FB               	movwf	utoa@base+1
  1743     0302  0826               	movf	itoa@base,w
  1744     0303  00FA               	movwf	utoa@base
  1745     0304  0828               	movf	itoa@buf,w
  1746     0305  120A  118A  2139  120A  118A  	fcall	_utoa
  1747     030A                     i1l681:
  1748     030A  0008               	return
  1749     030B                     __end_of_itoa:
  1750                           
  1751                           	psect	text10
  1752     0139                     __ptext10:	
  1753 ;; *************** function _utoa *****************
  1754 ;; Defined at:
  1755 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\itoa.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  buf             1    wreg     PTR unsigned char 
  1758 ;;		 -> Potentiometer(1), 
  1759 ;;  val             2    8[COMMON] unsigned int 
  1760 ;;  base            2   10[COMMON] int 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  1763 ;;		 -> Potentiometer(1), 
  1764 ;;  v               2    0[BANK0 ] unsigned int 
  1765 ;;  c               1    2[BANK0 ] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      PTR unsigned char 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1775 ;;      Params:         4       0       0       0       0
  1776 ;;      Locals:         0       4       0       0       0
  1777 ;;      Temps:          1       0       0       0       0
  1778 ;;      Totals:         5       4       0       0       0
  1779 ;;Total ram usage:        9 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; Hardware stack levels required when called: 1
  1782 ;; This function calls:
  1783 ;;		___lwdiv
  1784 ;;		___lwmod
  1785 ;; This function is called by:
  1786 ;;		_itoa
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790     0139                     _utoa:	
  1791                           ;psect for function _utoa
  1792                           
  1793                           
  1794                           ;incstack = 0
  1795                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1796                           ;utoa@buf stored from wreg
  1797     0139  1283               	bcf	3,5	;RP0=0, select bank0
  1798     013A  1303               	bcf	3,6	;RP1=0, select bank0
  1799     013B  00A3               	movwf	utoa@buf
  1800     013C                     i1l1001:
  1801     013C  0879               	movf	utoa@val+1,w
  1802     013D  00A1               	movwf	utoa@v+1
  1803     013E  0878               	movf	utoa@val,w
  1804     013F  00A0               	movwf	utoa@v
  1805     0140                     i1l1003:
  1806     0140  087B               	movf	utoa@base+1,w
  1807     0141  00F1               	movwf	___lwdiv@divisor+1
  1808     0142  087A               	movf	utoa@base,w
  1809     0143  00F0               	movwf	___lwdiv@divisor
  1810     0144  0821               	movf	utoa@v+1,w
  1811     0145  00F3               	movwf	___lwdiv@dividend+1
  1812     0146  0820               	movf	utoa@v,w
  1813     0147  00F2               	movwf	___lwdiv@dividend
  1814     0148  120A  118A  21F0  120A  118A  	fcall	___lwdiv
  1815     014D  0871               	movf	?___lwdiv+1,w
  1816     014E  1283               	bcf	3,5	;RP0=0, select bank0
  1817     014F  1303               	bcf	3,6	;RP1=0, select bank0
  1818     0150  00A1               	movwf	utoa@v+1
  1819     0151  0870               	movf	?___lwdiv,w
  1820     0152  00A0               	movwf	utoa@v
  1821     0153                     i1l1005:
  1822     0153  3001               	movlw	1
  1823     0154  00FC               	movwf	??_utoa
  1824     0155  087C               	movf	??_utoa,w
  1825     0156  07A3               	addwf	utoa@buf,f
  1826     0157                     i1l1007:
  1827     0157  0820               	movf	utoa@v,w
  1828     0158  0421               	iorwf	utoa@v+1,w
  1829     0159  1D03               	btfss	3,2
  1830     015A  295C               	goto	u45_21
  1831     015B  295D               	goto	u45_20
  1832     015C                     u45_21:
  1833     015C  2940               	goto	i1l1003
  1834     015D                     u45_20:
  1835     015D                     i1l1009:
  1836     015D  0823               	movf	utoa@buf,w
  1837     015E  0084               	movwf	4
  1838     015F  1383               	bcf	3,7	;select IRP bank0
  1839     0160  0180               	clrf	0
  1840     0161                     i1l1011:
  1841     0161  3001               	movlw	1
  1842     0162  02A3               	subwf	utoa@buf,f
  1843     0163                     i1l1013:
  1844     0163  087B               	movf	utoa@base+1,w
  1845     0164  00F1               	movwf	___lwmod@divisor+1
  1846     0165  087A               	movf	utoa@base,w
  1847     0166  00F0               	movwf	___lwmod@divisor
  1848     0167  0879               	movf	utoa@val+1,w
  1849     0168  00F3               	movwf	___lwmod@dividend+1
  1850     0169  0878               	movf	utoa@val,w
  1851     016A  00F2               	movwf	___lwmod@dividend
  1852     016B  120A  118A  2234  120A  118A  	fcall	___lwmod
  1853     0170  0870               	movf	?___lwmod,w
  1854     0171  1283               	bcf	3,5	;RP0=0, select bank0
  1855     0172  1303               	bcf	3,6	;RP1=0, select bank0
  1856     0173  00A2               	movwf	utoa@c
  1857     0174                     i1l1015:
  1858     0174  087B               	movf	utoa@base+1,w
  1859     0175  00F1               	movwf	___lwdiv@divisor+1
  1860     0176  087A               	movf	utoa@base,w
  1861     0177  00F0               	movwf	___lwdiv@divisor
  1862     0178  0879               	movf	utoa@val+1,w
  1863     0179  00F3               	movwf	___lwdiv@dividend+1
  1864     017A  0878               	movf	utoa@val,w
  1865     017B  00F2               	movwf	___lwdiv@dividend
  1866     017C  120A  118A  21F0  120A  118A  	fcall	___lwdiv
  1867     0181  0871               	movf	?___lwdiv+1,w
  1868     0182  00F9               	movwf	utoa@val+1
  1869     0183  0870               	movf	?___lwdiv,w
  1870     0184  00F8               	movwf	utoa@val
  1871     0185                     i1l1017:
  1872     0185  300A               	movlw	10
  1873     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1874     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1875     0188  0222               	subwf	utoa@c,w
  1876     0189  1C03               	skipc
  1877     018A  298C               	goto	u46_21
  1878     018B  298D               	goto	u46_20
  1879     018C                     u46_21:
  1880     018C  2991               	goto	i1l687
  1881     018D                     u46_20:
  1882     018D                     i1l1019:
  1883     018D  3007               	movlw	7
  1884     018E  00FC               	movwf	??_utoa
  1885     018F  087C               	movf	??_utoa,w
  1886     0190  07A2               	addwf	utoa@c,f
  1887     0191                     i1l687:
  1888     0191  3030               	movlw	48
  1889     0192  00FC               	movwf	??_utoa
  1890     0193  087C               	movf	??_utoa,w
  1891     0194  07A2               	addwf	utoa@c,f
  1892     0195                     i1l1021:
  1893     0195  0823               	movf	utoa@buf,w
  1894     0196  0084               	movwf	4
  1895     0197  0822               	movf	utoa@c,w
  1896     0198  1383               	bcf	3,7	;select IRP bank0
  1897     0199  0080               	movwf	0
  1898     019A                     i1l1023:
  1899     019A  3001               	movlw	1
  1900     019B  02A3               	subwf	utoa@buf,f
  1901     019C                     i1l1025:
  1902     019C  0878               	movf	utoa@val,w
  1903     019D  0479               	iorwf	utoa@val+1,w
  1904     019E  1D03               	btfss	3,2
  1905     019F  29A1               	goto	u47_21
  1906     01A0  29A2               	goto	u47_20
  1907     01A1                     u47_21:
  1908     01A1  2963               	goto	i1l1013
  1909     01A2                     u47_20:
  1910     01A2                     i1l1027:
  1911                           
  1912                           ;	Return value of _utoa is never used
  1913     01A2  3001               	movlw	1
  1914     01A3  00FC               	movwf	??_utoa
  1915     01A4  087C               	movf	??_utoa,w
  1916     01A5  07A3               	addwf	utoa@buf,f
  1917     01A6                     i1l689:
  1918     01A6  0008               	return
  1919     01A7                     __end_of_utoa:
  1920                           
  1921                           	psect	text11
  1922     0234                     __ptext11:	
  1923 ;; *************** function ___lwmod *****************
  1924 ;; Defined at:
  1925 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  divisor         2    0[COMMON] unsigned int 
  1928 ;;  dividend        2    2[COMMON] unsigned int 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  counter         1    5[COMMON] unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  2    0[COMMON] unsigned int 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         4       0       0       0       0
  1941 ;;      Locals:         1       0       0       0       0
  1942 ;;      Temps:          1       0       0       0       0
  1943 ;;      Totals:         6       0       0       0       0
  1944 ;;Total ram usage:        6 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_utoa
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953     0234                     ___lwmod:	
  1954                           ;psect for function ___lwmod
  1955                           
  1956     0234                     i1l971:	
  1957                           ;incstack = 0
  1958                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1959                           
  1960     0234  0870               	movf	___lwmod@divisor,w
  1961     0235  0471               	iorwf	___lwmod@divisor+1,w
  1962     0236  1903               	btfsc	3,2
  1963     0237  2A39               	goto	u37_21
  1964     0238  2A3A               	goto	u37_20
  1965     0239                     u37_21:
  1966     0239  2A69               	goto	i1l989
  1967     023A                     u37_20:
  1968     023A                     i1l973:
  1969     023A  01F5               	clrf	___lwmod@counter
  1970     023B  0AF5               	incf	___lwmod@counter,f
  1971     023C  2A48               	goto	i1l979
  1972     023D                     i1l975:
  1973     023D  3001               	movlw	1
  1974     023E                     u38_25:
  1975     023E  1003               	clrc
  1976     023F  0DF0               	rlf	___lwmod@divisor,f
  1977     0240  0DF1               	rlf	___lwmod@divisor+1,f
  1978     0241  3EFF               	addlw	-1
  1979     0242  1D03               	skipz
  1980     0243  2A3E               	goto	u38_25
  1981     0244                     i1l977:
  1982     0244  3001               	movlw	1
  1983     0245  00F4               	movwf	??___lwmod
  1984     0246  0874               	movf	??___lwmod,w
  1985     0247  07F5               	addwf	___lwmod@counter,f
  1986     0248                     i1l979:
  1987     0248  1FF1               	btfss	___lwmod@divisor+1,7
  1988     0249  2A4B               	goto	u39_21
  1989     024A  2A4C               	goto	u39_20
  1990     024B                     u39_21:
  1991     024B  2A3D               	goto	i1l975
  1992     024C                     u39_20:
  1993     024C                     i1l981:
  1994     024C  0871               	movf	___lwmod@divisor+1,w
  1995     024D  0273               	subwf	___lwmod@dividend+1,w
  1996     024E  1D03               	skipz
  1997     024F  2A52               	goto	u40_25
  1998     0250  0870               	movf	___lwmod@divisor,w
  1999     0251  0272               	subwf	___lwmod@dividend,w
  2000     0252                     u40_25:
  2001     0252  1C03               	skipc
  2002     0253  2A55               	goto	u40_21
  2003     0254  2A56               	goto	u40_20
  2004     0255                     u40_21:
  2005     0255  2A5C               	goto	i1l985
  2006     0256                     u40_20:
  2007     0256                     i1l983:
  2008     0256  0870               	movf	___lwmod@divisor,w
  2009     0257  02F2               	subwf	___lwmod@dividend,f
  2010     0258  0871               	movf	___lwmod@divisor+1,w
  2011     0259  1C03               	skipc
  2012     025A  03F3               	decf	___lwmod@dividend+1,f
  2013     025B  02F3               	subwf	___lwmod@dividend+1,f
  2014     025C                     i1l985:
  2015     025C  3001               	movlw	1
  2016     025D                     u41_25:
  2017     025D  1003               	clrc
  2018     025E  0CF1               	rrf	___lwmod@divisor+1,f
  2019     025F  0CF0               	rrf	___lwmod@divisor,f
  2020     0260  3EFF               	addlw	-1
  2021     0261  1D03               	skipz
  2022     0262  2A5D               	goto	u41_25
  2023     0263                     i1l987:
  2024     0263  3001               	movlw	1
  2025     0264  02F5               	subwf	___lwmod@counter,f
  2026     0265  1D03               	btfss	3,2
  2027     0266  2A68               	goto	u42_21
  2028     0267  2A69               	goto	u42_20
  2029     0268                     u42_21:
  2030     0268  2A4C               	goto	i1l981
  2031     0269                     u42_20:
  2032     0269                     i1l989:
  2033     0269  0873               	movf	___lwmod@dividend+1,w
  2034     026A  00F1               	movwf	?___lwmod+1
  2035     026B  0872               	movf	___lwmod@dividend,w
  2036     026C  00F0               	movwf	?___lwmod
  2037     026D                     i1l509:
  2038     026D  0008               	return
  2039     026E                     __end_of___lwmod:
  2040                           
  2041                           	psect	text12
  2042     01F0                     __ptext12:	
  2043 ;; *************** function ___lwdiv *****************
  2044 ;; Defined at:
  2045 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  divisor         2    0[COMMON] unsigned int 
  2048 ;;  dividend        2    2[COMMON] unsigned int 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  quotient        2    5[COMMON] unsigned int 
  2051 ;;  counter         1    7[COMMON] unsigned char 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  2    0[COMMON] unsigned int 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2061 ;;      Params:         4       0       0       0       0
  2062 ;;      Locals:         3       0       0       0       0
  2063 ;;      Temps:          1       0       0       0       0
  2064 ;;      Totals:         8       0       0       0       0
  2065 ;;Total ram usage:        8 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_utoa
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074     01F0                     ___lwdiv:	
  2075                           ;psect for function ___lwdiv
  2076                           
  2077     01F0                     i1l945:	
  2078                           ;incstack = 0
  2079                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2080                           
  2081     01F0  01F5               	clrf	___lwdiv@quotient
  2082     01F1  01F6               	clrf	___lwdiv@quotient+1
  2083     01F2                     i1l947:
  2084     01F2  0870               	movf	___lwdiv@divisor,w
  2085     01F3  0471               	iorwf	___lwdiv@divisor+1,w
  2086     01F4  1903               	btfsc	3,2
  2087     01F5  29F7               	goto	u30_21
  2088     01F6  29F8               	goto	u30_20
  2089     01F7                     u30_21:
  2090     01F7  2A2F               	goto	i1l967
  2091     01F8                     u30_20:
  2092     01F8                     i1l949:
  2093     01F8  01F7               	clrf	___lwdiv@counter
  2094     01F9  0AF7               	incf	___lwdiv@counter,f
  2095     01FA  2A06               	goto	i1l955
  2096     01FB                     i1l951:
  2097     01FB  3001               	movlw	1
  2098     01FC                     u31_25:
  2099     01FC  1003               	clrc
  2100     01FD  0DF0               	rlf	___lwdiv@divisor,f
  2101     01FE  0DF1               	rlf	___lwdiv@divisor+1,f
  2102     01FF  3EFF               	addlw	-1
  2103     0200  1D03               	skipz
  2104     0201  29FC               	goto	u31_25
  2105     0202                     i1l953:
  2106     0202  3001               	movlw	1
  2107     0203  00F4               	movwf	??___lwdiv
  2108     0204  0874               	movf	??___lwdiv,w
  2109     0205  07F7               	addwf	___lwdiv@counter,f
  2110     0206                     i1l955:
  2111     0206  1FF1               	btfss	___lwdiv@divisor+1,7
  2112     0207  2A09               	goto	u32_21
  2113     0208  2A0A               	goto	u32_20
  2114     0209                     u32_21:
  2115     0209  29FB               	goto	i1l951
  2116     020A                     u32_20:
  2117     020A                     i1l957:
  2118     020A  3001               	movlw	1
  2119     020B                     u33_25:
  2120     020B  1003               	clrc
  2121     020C  0DF5               	rlf	___lwdiv@quotient,f
  2122     020D  0DF6               	rlf	___lwdiv@quotient+1,f
  2123     020E  3EFF               	addlw	-1
  2124     020F  1D03               	skipz
  2125     0210  2A0B               	goto	u33_25
  2126     0211  0871               	movf	___lwdiv@divisor+1,w
  2127     0212  0273               	subwf	___lwdiv@dividend+1,w
  2128     0213  1D03               	skipz
  2129     0214  2A17               	goto	u34_25
  2130     0215  0870               	movf	___lwdiv@divisor,w
  2131     0216  0272               	subwf	___lwdiv@dividend,w
  2132     0217                     u34_25:
  2133     0217  1C03               	skipc
  2134     0218  2A1A               	goto	u34_21
  2135     0219  2A1B               	goto	u34_20
  2136     021A                     u34_21:
  2137     021A  2A22               	goto	i1l963
  2138     021B                     u34_20:
  2139     021B                     i1l959:
  2140     021B  0870               	movf	___lwdiv@divisor,w
  2141     021C  02F2               	subwf	___lwdiv@dividend,f
  2142     021D  0871               	movf	___lwdiv@divisor+1,w
  2143     021E  1C03               	skipc
  2144     021F  03F3               	decf	___lwdiv@dividend+1,f
  2145     0220  02F3               	subwf	___lwdiv@dividend+1,f
  2146     0221                     i1l961:
  2147     0221  1475               	bsf	___lwdiv@quotient,0
  2148     0222                     i1l963:
  2149     0222  3001               	movlw	1
  2150     0223                     u35_25:
  2151     0223  1003               	clrc
  2152     0224  0CF1               	rrf	___lwdiv@divisor+1,f
  2153     0225  0CF0               	rrf	___lwdiv@divisor,f
  2154     0226  3EFF               	addlw	-1
  2155     0227  1D03               	skipz
  2156     0228  2A23               	goto	u35_25
  2157     0229                     i1l965:
  2158     0229  3001               	movlw	1
  2159     022A  02F7               	subwf	___lwdiv@counter,f
  2160     022B  1D03               	btfss	3,2
  2161     022C  2A2E               	goto	u36_21
  2162     022D  2A2F               	goto	u36_20
  2163     022E                     u36_21:
  2164     022E  2A0A               	goto	i1l957
  2165     022F                     u36_20:
  2166     022F                     i1l967:
  2167     022F  0876               	movf	___lwdiv@quotient+1,w
  2168     0230  00F1               	movwf	?___lwdiv+1
  2169     0231  0875               	movf	___lwdiv@quotient,w
  2170     0232  00F0               	movwf	?___lwdiv
  2171     0233                     i1l499:
  2172     0233  0008               	return
  2173     0234                     __end_of___lwdiv:
  2174                           
  2175                           	psect	text13
  2176     030B                     __ptext13:	
  2177 ;; *************** function _Menu *****************
  2178 ;; Defined at:
  2179 ;;		line 84 in file "Lab8.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0
  2196 ;;      Totals:         0       0       0       0       0
  2197 ;;Total ram usage:        0 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 2
  2200 ;; This function calls:
  2201 ;;		_Texto
  2202 ;; This function is called by:
  2203 ;;		_isr
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207     030B                     _Menu:	
  2208                           ;psect for function _Menu
  2209                           
  2210     030B                     i1l1035:	
  2211                           ;incstack = 0
  2212                           ; Regs used in _Menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2213                           
  2214                           
  2215                           ;Lab8.c: 86:     Texto("\n Menu, Seleccione opcion \r\n");
  2216     030B  3049               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2217     030C  00F0               	movwf	Texto@text
  2218     030D  3080               	movlw	128
  2219     030E  00F1               	movwf	Texto@text+1
  2220     030F  120A  118A  22C1  120A  118A  	fcall	_Texto
  2221                           
  2222                           ;Lab8.c: 87:     Texto("a. Leer potenciometro \r\n");
  2223     0314  3066               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2224     0315  00F0               	movwf	Texto@text
  2225     0316  3080               	movlw	128
  2226     0317  00F1               	movwf	Texto@text+1
  2227     0318  120A  118A  22C1  120A  118A  	fcall	_Texto
  2228                           
  2229                           ;Lab8.c: 88:     Texto("b. Enviar ASCII \r\n");
  2230     031D  307F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2231     031E  00F0               	movwf	Texto@text
  2232     031F  3080               	movlw	128
  2233     0320  00F1               	movwf	Texto@text+1
  2234     0321  120A  118A  22C1  120A  118A  	fcall	_Texto
  2235     0326                     i1l81:
  2236     0326  0008               	return
  2237     0327                     __end_of_Menu:
  2238                           
  2239                           	psect	text14
  2240     02C1                     __ptext14:	
  2241 ;; *************** function _Texto *****************
  2242 ;; Defined at:
  2243 ;;		line 73 in file "Lab8.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  text            2    0[COMMON] PTR unsigned char 
  2246 ;;		 -> STR_5(39), STR_4(33), Potentiometer(1), STR_3(19), 
  2247 ;;		 -> STR_2(25), STR_1(29), 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         2       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0
  2262 ;;      Totals:         2       0       0       0       0
  2263 ;;Total ram usage:        2 bytes
  2264 ;; Hardware stack levels used: 2
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_Menu
  2269 ;;		_isr
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273     02C1                     _Texto:	
  2274                           ;psect for function _Texto
  2275                           
  2276     02C1                     i1l993:	
  2277                           ;incstack = 0
  2278                           ; Regs used in _Texto: [wreg-fsr0h+btemp+1+pclath]
  2279                           
  2280                           
  2281                           ;Lab8.c: 73: void Texto(unsigned char *text);Lab8.c: 74: {;Lab8.c: 75:     while (*text 
      +                          != '\0')
  2282     02C1  2AD6               	goto	i1l999
  2283     02C2                     i1l74:
  2284     02C2  1E0C               	btfss	12,4	;volatile
  2285     02C3  2AC5               	goto	u43_21
  2286     02C4  2AC6               	goto	u43_20
  2287     02C5                     u43_21:
  2288     02C5  2AC2               	goto	i1l74
  2289     02C6                     u43_20:
  2290     02C6                     i1l995:
  2291                           
  2292                           ;Lab8.c: 78:     TXREG = *text;
  2293     02C6  0871               	movf	Texto@text+1,w
  2294     02C7  00FF               	movwf	btemp+1
  2295     02C8  0870               	movf	Texto@text,w
  2296     02C9  0084               	movwf	4
  2297     02CA  120A  118A  201F  120A  118A  	fcall	stringtab
  2298     02CF  0099               	movwf	25	;volatile
  2299     02D0                     i1l997:
  2300                           
  2301                           ;Lab8.c: 79:     *text++;
  2302     02D0  3001               	movlw	1
  2303     02D1  07F0               	addwf	Texto@text,f
  2304     02D2  1803               	skipnc
  2305     02D3  0AF1               	incf	Texto@text+1,f
  2306     02D4  3000               	movlw	0
  2307     02D5  07F1               	addwf	Texto@text+1,f
  2308     02D6                     i1l999:
  2309                           
  2310                           ;Lab8.c: 75:     while (*text != '\0')
  2311     02D6  0871               	movf	Texto@text+1,w
  2312     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2313     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  2314     02D9  00FF               	movwf	btemp+1
  2315     02DA  0870               	movf	Texto@text,w
  2316     02DB  0084               	movwf	4
  2317     02DC  120A  118A  201F  120A  118A  	fcall	stringtab
  2318     02E1  3A00               	xorlw	0
  2319     02E2  1D03               	skipz
  2320     02E3  2AE5               	goto	u44_21
  2321     02E4  2AE6               	goto	u44_20
  2322     02E5                     u44_21:
  2323     02E5  2AC2               	goto	i1l74
  2324     02E6                     u44_20:
  2325     02E6                     i1l78:
  2326     02E6  0008               	return
  2327     02E7                     __end_of_Texto:
  2328     007E                     btemp	set	126	;btemp
  2329     007E                     wtemp0	set	126
  2330                           
  2331                           	psect	idloc
  2332                           
  2333                           ;Config register IDLOC0 @ 0x2000
  2334                           ;	unspecified, using default values
  2335     2000                     	org	8192
  2336     2000  3FFF               	dw	16383
  2337                           
  2338                           ;Config register IDLOC1 @ 0x2001
  2339                           ;	unspecified, using default values
  2340     2001                     	org	8193
  2341     2001  3FFF               	dw	16383
  2342                           
  2343                           ;Config register IDLOC2 @ 0x2002
  2344                           ;	unspecified, using default values
  2345     2002                     	org	8194
  2346     2002  3FFF               	dw	16383
  2347                           
  2348                           ;Config register IDLOC3 @ 0x2003
  2349                           ;	unspecified, using default values
  2350     2003                     	org	8195
  2351     2003  3FFF               	dw	16383
  2352                           
  2353                           	psect	config
  2354                           
  2355                           ;Config register CONFIG1 @ 0x2007
  2356                           ;	Oscillator Selection bits
  2357                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2358                           ;	Watchdog Timer Enable bit
  2359                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2360                           ;	Power-up Timer Enable bit
  2361                           ;	PWRTE = OFF, PWRT disabled
  2362                           ;	RE3/MCLR pin function select bit
  2363                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2364                           ;	Code Protection bit
  2365                           ;	CP = OFF, Program memory code protection is disabled
  2366                           ;	Data Code Protection bit
  2367                           ;	CPD = OFF, Data memory code protection is disabled
  2368                           ;	Brown Out Reset Selection bits
  2369                           ;	BOREN = OFF, BOR disabled
  2370                           ;	Internal External Switchover bit
  2371                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2372                           ;	Fail-Safe Clock Monitor Enabled bit
  2373                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2374                           ;	Low Voltage Programming Enable bit
  2375                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2376                           ;	In-Circuit Debugger Mode bit
  2377                           ;	DEBUG = 0x1, unprogramme  2378     2007                     	org	8199
  2379     2007  20D4               	dw	8404
  2380                           
  2381                           ;Config register CONFIG2 @ 0x2008
  2382                           ;	Brown-out Reset Selection bit
  2383                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2384                           ;	Flash Program Memory Self Write Enable bits
  2385                           ;	WRT = OFF, Write protection off
  2386     2008                     	org	8200
  2387     2008  3FFF               	dw	16383

Data Sizes:
    Strings     145
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 1
		 -> Potentiometer(BANK0[1]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 1
		 -> Potentiometer(BANK0[1]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 1
		 -> Potentiometer(BANK0[1]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 1
		 -> Potentiometer(BANK0[1]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 1
		 -> Potentiometer(BANK0[1]), 

    Texto@text	PTR unsigned char  size(2) Largest target is 39
		 -> STR_5(CODE[39]), STR_4(CODE[33]), Potentiometer(BANK0[1]), STR_3(CODE[19]), 
		 -> STR_2(CODE[25]), STR_1(CODE[29]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _Menu->_Texto

Critical Paths under _main in BANK0

    _main->_ADC_Select

Critical Paths under _isr in BANK0

    _isr->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     186
                        _ADC_Capture
                            _ADC_Int
                         _ADC_Select
                  _EUSART_Enable_Isr
                        _EUSART_Init
                         _Int_Enable
                              _Setup
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Int_Enable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Enable_Isr                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Select                                           5     3      2     164
                                             15 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Int                                              1     1      0      22
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Capture                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0    2614
                                              9 BANK0      6     6      0
                               _Menu
                              _Texto
                               _itoa
 ---------------------------------------------------------------------------------
 (3) _itoa                                                 7     3      4    1612
                                             13 COMMON     1     1      0
                                              4 BANK0      5     1      4
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Menu                                                 0     0      0     501
                              _Texto
 ---------------------------------------------------------------------------------
 (4) _Texto                                                2     0      2     501
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Capture
   _ADC_Int
   _ADC_Select
   _EUSART_Enable_Isr
   _EUSART_Init
   _Int_Enable
   _Setup

 _isr (ROOT)
   _Menu
     _Texto
   _Texto
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Apr 16 20:18:08 2023

                        pc 0002                         l66 035A                         l67 0355  
                       l69 0359                         l99 02C0                         fsr 0004  
                      l102 0363                        l123 033E                        l107 0292  
                      l141 01EF                        l126 0368                        l138 034D  
                      _GIE 005F                        u480 0354                        u481 0353  
                      u490 0359                        u491 0358                        _isr 00C0  
                      fsr0 0004                        indf 0000            __end_of_ADC_Int 034E  
             ?_EUSART_Init 0070                       l1031 034E                       l1051 029B  
                     l1131 026E                       l1061 035B                       l1053 029F  
                     l1133 0273                       l1063 0342                       l1071 01A7  
                     l1055 02A0                       l1135 0278                       l1065 0344  
                     l1081 0332                       l1073 0327                       l1057 02B9  
                     l1137 027E                       l1067 034B                       l1091 033B  
                     l1083 0335                       l1075 032A                       l1059 02BF  
                     l1139 0288                       l1069 034C                       l1093 0364  
                     l1085 0338                       l1077 032C                       l1087 0339  
                     l1079 032F                       l1089 033A                       _ADC1 0036  
                     _ADIE 0466                       _ADIF 0066                       ?_isr 0070  
                     STR_1 0077                       STR_2 0094                       STR_3 00AD  
                     STR_4 0056                       STR_5 002F                       _PEIE 005E  
                     i1l81 0326                       i1l74 02C2                       i1l91 0106  
                     i1l78 02E6                       i1l96 012D                       _TXIF 0064  
                     _Menu 030B                       _main 026E                       _itoa 02E7  
                     btemp 007E                       _utoa 0139                       start 0012  
                    ??_isr 0029         ADC_Int@ADFM_Select 002F                      ?_Menu 0070  
                    ?_main 0070                      ?_itoa 0024                      _ANSEL 0188  
                    ?_utoa 0078            __end_of___lwdiv 0234            __end_of___lwmod 026E  
                    i1l509 026D                      i1l681 030A                      i1l499 0233  
                    i1l951 01FB                      i1l687 0191                      i1l961 0221  
                    i1l953 0202                      i1l945 01F0                      i1l689 01A6  
                    i1l963 0222                      i1l955 0206                      i1l947 01F2  
                    i1l971 0234                      i1l965 0229                      i1l957 020A  
                    i1l949 01F8                      i1l981 024C                      i1l973 023A  
                    i1l959 021B                      i1l967 022F                      i1l983 0256  
                    i1l975 023D                      i1l993 02C1                      i1l985 025C  
                    i1l977 0244                      i1l995 02C6                      i1l987 0263  
                    i1l979 0248                      i1l997 02D0                      i1l989 0269  
                    i1l999 02D6                      _RCREG 001A                      u30_20 01F8  
                    u30_21 01F7                      u31_25 01FC                      u32_20 020A  
                    u40_20 0256                      u32_21 0209                      u40_21 0255  
                    u40_25 0252                      u33_25 020B                      u41_25 025D  
                    u34_20 021B                      u42_20 0269                      u50_20 02EE  
                    u34_21 021A                      u42_21 0268                      u50_21 02ED  
                    _SPBRG 0099                      u34_25 0217                      u43_20 02C6  
                    u51_20 00C4                      u43_21 02C5                      u51_21 00C3  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      u35_25 0223                      u44_20 02E6  
                    u36_20 022F                      u52_20 00CB                      u44_21 02E5  
                    u36_21 022E                      u52_21 00CA                      u37_20 023A  
                    u45_20 015D                      u53_20 00D3                      u37_21 0239  
                    u45_21 015C                      u53_21 00D2                      u46_20 018D  
                    u54_20 00FD                      u46_21 018C                      u54_21 00FC  
                    u38_25 023E                      u39_20 024C                      u47_20 01A2  
                    u55_20 010C                      u39_21 024B                      u47_21 01A1  
                    u55_21 010B                      u56_20 0119                      u56_21 0118  
                    u57_20 011F                      u57_21 011E                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    u58_20 0124                      u58_21 0123                      _TXREG 0019  
                    _Setup 029B                      _Texto 02C1                      pclath 000A  
                    utoa@c 0022                      utoa@v 0020                      status 0003  
                    wtemp0 007E                 _Int_Enable 035B            __initialization 0015  
             __end_of_Menu 0327               __end_of_main 029B               __end_of_itoa 030B  
             __end_of_utoa 01A7                  ??_ADC_Int 002F                     ??_Menu 0072  
                   ??_main 0034                     ??_itoa 007D                     ??_utoa 007C  
                   ?_Setup 0070                     ?_Texto 0070                     _ADCON0 001F  
                   _ADRESH 001E                     _ANSELH 0189                     i1l1001 013C  
                   i1l1011 0161                     i1l1003 0140                     i1l1021 0195  
                   i1l1013 0163                     i1l1005 0153                     i1l1101 00C7  
                   i1l1023 019A                     i1l1015 0174                     i1l1007 0157  
                   i1l1111 00ED                     i1l1103 00CB                     i1l1025 019C  
                   i1l1017 0185                     i1l1009 015D                     i1l1041 02EE  
                   i1l1113 00F7                     i1l1105 00CD                     i1l1121 0113  
                   i1l1035 030B                     i1l1027 01A2                     i1l1019 018D  
                   i1l1043 02F3                     i1l1123 0119                     i1l1115 00FD  
                   i1l1107 00D3                     i1l1045 02F7                     i1l1037 02EA  
                   i1l1125 011F                     i1l1117 010C                     i1l1109 00E4  
                   i1l1047 02FC                     i1l1039 02EA                     i1l1127 0124  
                   i1l1119 010E                     i1l1129 0129                     i1l1095 00C0  
                   i1l1097 00C4                     i1l1099 00C6                     _SPBRGH 009A  
             ??_ADC_Select 0031                  ??___lwdiv 0074                  ??___lwmod 0074  
       __end_of_ADC_Select 01F0                     saved_w 007E    __end_of__initialization 001B  
              ?_Int_Enable 0070             __pcstackCOMMON 0070              __end_of_Setup 02C1  
            __end_of_Texto 02E7                    ??_Setup 002F                    ??_Texto 0072  
               __pbssBANK0 0034                 __pmaintext 026E                 __pintentry 0004  
                  _ADC_Int 033F              ??_ADC_Capture 002F                 __stringtab 001F  
        _EUSART_Enable_Isr 0364         ?_EUSART_Enable_Isr 0070                    ___lwdiv 01F0  
                  ___lwmod 0234        ??_EUSART_Enable_Isr 002F                    __ptext1 029B  
                  __ptext2 035B                    __ptext3 0327                    __ptext4 0364  
                  __ptext5 01A7                    __ptext6 033F                    __ptext7 034E  
                  __ptext8 00C0                    __ptext9 02E7        __end_of_ADC_Capture 035B  
     end_of_initialization 001B  __end_of_EUSART_Enable_Isr 0369                    itoa@buf 0028  
                  itoa@val 0024                  _RCSTAbits 0018                    utoa@buf 0023  
                  utoa@val 0078                  _TXSTAbits 0098               ??_Int_Enable 002F  
              _ADC_Capture 034E        start_initialization 0015                __end_of_isr 0139  
            ??_EUSART_Init 002F                  _Menu_Flag 0034         __end_of_Int_Enable 0364  
                 ?_ADC_Int 0070                  Texto@text 0070                  ___latbits 0002  
            __pcstackBANK0 0020          ADC_Select@channel 002F        __end_of_EUSART_Init 033F  
         ___lwdiv@dividend 0072                   ?___lwdiv 0070                   ?___lwmod 0070  
                __pstrings 001F           ___lwdiv@quotient 0075          interrupt_function 0004  
                 _PIE1bits 008C                   _PIR1bits 000C                 _ADCON0bits 001F  
              __stringbase 002E                 _ADCON1bits 009F                _EUSART_Init 0327  
               _ADC_Select 01A7              _Potentiometer 0037                   _Selector 0035  
       __end_of__stringtab 002F               ?_ADC_Capture 0070            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 0139                   __ptext11 0234  
                 __ptext12 01F0                   __ptext13 030B                   __ptext14 02C1  
                 itoa@base 0026                   intlevel1 0000           ___lwmod@dividend 0072  
              ?_ADC_Select 002F                  stringcode 0029                 _OSCCONbits 008F  
                 utoa@base 007A            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 0029                   stringtab 001F  
